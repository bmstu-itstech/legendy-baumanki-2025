use crate::app::usecases::dto::{
    CharacterDTO, SlotDTO, TaskDTO, TeamWithMembersDTO, TrackDescriptionDTO, TrackInProgressDTO,
};
use crate::domain::models::{FileID, MediaID, TrackStatus};
use chrono::{Duration, Utc};
use rand::seq::IndexedRandom;

type StaticStr = &'static str;

pub const ENTER_MESSAGE_TEXT: StaticStr = "üìù –ù–∞–ø–∏—à–∏ –º–Ω–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ";

pub const USE_KEYBOARD: StaticStr =
    "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –≤–Ω–∏–∑—É –¥–ª—è –æ—Ç–≤–µ—Ç–∞. –¢–∞–∫ –±—É–¥–µ—Ç —É–¥–æ–±–Ω–µ–µ!";

pub const PERMISSION_DENIED: StaticStr = "<b>‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω</b>\n\
    –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.";

pub const INTERNAL_ERROR: StaticStr = "‚ö†Ô∏è <b>–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞</b>\n\
     –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ –ø–æ–∑–∂–µ –∏–ª–∏ —Å–æ–æ–±—â–∏ \
     –æ–± —ç—Ç–æ–º –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞–º (—Å–º. –æ–ø–∏—Å–∞–Ω–∏–µ –±–æ—Ç–∞).";

pub const MENU_TEXT: StaticStr = "üì≤ <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>\n\
    –í—ã–±–µ—Ä–∏ –Ω—É–∂–Ω—ã–π –ø—É–Ω–∫—Ç –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ.";

pub const UNKNOWN_MENU_OPTION: StaticStr = "‚ùå <b>–ù–µ–ø–æ–Ω—è—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞</b>\n\
     –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —è –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç–æ—Ç –∑–∞–ø—Ä–æ—Å. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ –æ–¥–Ω—É –∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –æ–ø—Ü–∏–π –≤ –º–µ–Ω—é.";

pub const SEND_APPROVAL_EXIT_TEAM: StaticStr =
    "‚ùì –¢—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—á–µ—à—å –≤—ã–π—Ç–∏ –∏–∑ —Å–≤–æ–µ–π —Ç–µ–∫—É—â–µ–π –∫–æ–º–∞–Ω–¥—ã?";

pub const SUCCESSFUL_EXIT_TEAM: StaticStr = "üëã <b>–¢—ã –≤—ã—à–µ–ª –∏–∑ –∫–æ–º–∞–Ω–¥—ã</b>\n\
     –¢—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–∫–∏–Ω—É–ª(–∞) –∫–æ–º–∞–Ω–¥—É. –¢–µ–ø–µ—Ä—å —Ç—ã –º–æ–∂–µ—à—å –≤—Å—Ç—É–ø–∏—Ç—å –≤ –Ω–æ–≤—É—é, –∏—Å–ø–æ–ª—å–∑—É—è –∫–æ–¥-–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ.";

pub const INVALID_UPLOAD_COMMAND_USAGE: StaticStr = "<b>‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã</b>\n\
    –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:\n\
    <code>/upload key</code>";

pub const INVALID_MEDIA_COMMAND_USAGE: StaticStr = "<b>‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã</b>\n\
    –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:\n\
    <code>/media key</code>";

pub const PROMPT_MEDIA: StaticStr = "üì§ <b>–ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞</b>\n\
    –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª (–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–ª–∏ –≤–∏–¥–µ–æ—Å–æ–æ–±—â–µ–Ω–∏–µ) –≤ —á–∞—Ç, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –µ–≥–æ FileID.";

pub const UNKNOWN_MEDIA_FORMAT: StaticStr = "‚ùå <b>–§–æ—Ä–º–∞—Ç –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è</b>
    –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–ª–∏ –≤–∏–¥–µ–æ—Å–æ–æ–±—â–µ–Ω–∏–µ.";

pub const PROMPT_CHARACTER_NAME: StaticStr = "‚ò∫Ô∏è <b>–û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä!</b>\n\
    \n\
    –ü–æ–∑–Ω–∞–∫–æ–º—å—Å—è —Å –≤–µ–ª–∏–∫–∏–º–∏ —É—á—ë–Ω—ã–º–∏, –∏–Ω–∂–µ–Ω–µ—Ä–∞–º–∏ –∏ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—á–∏–Ω–∞–ª–∏ —Å–≤–æ–π –ø—É—Ç—å –∑–¥–µ—Å—å, –≤ —Å—Ç–µ–Ω–∞—Ö –ú–ì–¢–£ –∏–º. –ù.–≠. –ë–∞—É–º–∞–Ω–∞.\n\
    \n\
    <b><i>–ö–æ–≥–æ –∏–∑ –Ω–∏—Ö —Ç—ã —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å –ª—É—á—à–µ?</i></b>";

pub const PROMPT_FEEDBACK: StaticStr = "‚úçÔ∏è –¢–µ–ø–µ—Ä—å —Ç—ã –º–æ–∂–µ—à—å –Ω–∞–ø–∏—Å–∞—Ç—å –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞–º!";

pub const FEEDBACK_SENT: StaticStr = "üì© <b>–û—Ç–ª–∏—á–Ω–æ, —Ç–≤–æ–π –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!</b>\n\
    \n\
    <i>–ú—ã –æ–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –ø—Ä–æ—á–∏—Ç–∞–µ–º –µ–≥–æ –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è!</i>";

pub const REGISTRATION_CLOSED: StaticStr = "ü•∫ <b>–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è —É–∂–µ –Ω–µ–ª—å–∑—è!</b>\n\
    \n\
    üëâüèª <i>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –±—ã–ª–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ –¥–æ 30 —Å–µ–Ω—Ç—è–±—Ä—è, –Ω–æ –Ω–µ —Å–ø–µ—à–∏ —Ä–∞—Å—Å—Ç—Ä–∞–∏–≤–∞—Ç—å—Å—è. –í —Å–ª–µ–¥—É—é—â–µ–º –≥–æ–¥ —Ç—ã —Å–∞–º —Å–º–æ–∂–µ—à—å —Å—Ç–∞—Ç—å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–æ–º ¬´–õ–µ–≥–µ–Ω–¥ –ë–∞—É–º–∞–Ω–∫–∏¬ª ‚Äî –ø—Ä–∏—Å–æ–µ–¥–∏–Ω—è–π—Å—è –∫ <a href=\"https://forms.yandex.ru/u/6897839490fa7b44d1601991\">–∫–æ–º–∞–Ω–¥–µ –°—Ç—É–¥–µ–Ω—á–µ—Å–∫–æ–≥–æ —Å–æ–≤–µ—Ç–∞</a> –∏ –≤–º–µ—Å—Ç–µ –º—ã —Å–¥–µ–ª–∞–µ–º —Ç–∞–∫, —á—Ç–æ–±—ã –æ –Ω–æ–≤—ã—Ö ¬´–õ–µ–≥–µ–Ω–¥–∞—Ö¬ª –≥–æ–≤–æ—Ä–∏–ª–∏ –µ—â—ë –≥—Ä–æ–º—á–µ!</i>";

pub const PROMPT_TRACK: StaticStr = "‚ú® <b>–í—ã–±–µ—Ä–∏ —Ç—Ä–µ–∫</b>";

pub const PROMPT_TRACK_START: StaticStr = "
    –ö–∞–∫ —Ç–æ–ª—å–∫–æ –≤—ã –Ω–∞—á–Ω—ë—Ç–µ —ç—Ç–æ—Ç —Ç—Ä–µ–∫ –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è —Ç–∞–π–º–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π –ø–æ–∫–∞–∂–µ—Ç, –Ω–∞—Å–∫–æ–ª—å–∫–æ –±—ã—Å—Ç—Ä–æ –≤—ã —Å–ø–æ—Å–æ–±–Ω—ã –ø—Ä–æ–∫–∞—á–∏–≤–∞—Ç—å —Å–≤–æ–∏ –Ω–∞–≤—ã–∫–∏!\n\
    \n\
    <b>–í–∞—à–∏ –∑–∞–¥–∞—á–∏:</b>\n\
    üí° –û—Ç–≤–µ—á–∞—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã\n\
    üí° –í—ã–±–∏—Ä–∞—Ç—å –≤–µ—Ä–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã\n\
    üí° –ü—Ä–∏—Å—ã–ª–∞—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏\n\
    üí° –î–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å —Å–ª–∞–∂–µ–Ω–Ω–æ –∏ –±—ã—Å—Ç—Ä–æ\n\
    \n\
    üì∏ <b>–í–∞–∂–Ω–æ:</b>\n\
    –ü–æ–º–Ω–∏—Ç–µ, —á—Ç–æ –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π —Ç—Ä–µ–±—É–µ—Ç –≤—Ä–µ–º–µ–Ω–∏ ‚Äî –Ω–µ –æ—Ç–∫–ª–∞–¥—ã–≤–∞–π—Ç–µ –∏—Ö –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ!\n\
    \n\
    <i>–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ –≥–æ—Ç–æ–≤—ã –Ω–∞—á–∞—Ç—å?</i>";

const TASK_CORRECT_ANSWER_1: StaticStr =
    "‚úÖ <b>–°–Ω–æ–≤–∞ –ø—Ä–∞–≤!</b> –¢—ã —É–∂–µ –Ω–µ —É—á–∞—Å—Ç–Ω–∏–∫ ‚Äî —Ç—ã –º–∞—Å—Ç–µ—Ä. –ö–∞–∂–¥—ã–π —Ç–≤–æ–π —à–∞–≥ –±–ª–∏–∂–µ –∫ –ª–µ–≥–µ–Ω–¥–µ.";

const TASK_CORRECT_ANSWER_2: StaticStr =
    "‚úÖ <b>–¢—ã —Å–ø—Ä–∞–≤–∏–ª—Å—è!</b> –ò —Å–ø—Ä–∞–≤–∏–ª—Å—è —Å –¥–æ—Å—Ç–æ–∏–Ω—Å—Ç–≤–æ–º. –¢–∞–∫–∏–µ –º–æ–º–µ–Ω—Ç—ã –∏ –¥–µ–ª–∞—é—Ç –Ω–∞—Å —Å–∏–ª—å–Ω–µ–µ!";

const TASK_CORRECT_ANSWER_3: StaticStr =
    "‚úÖ <b>–í–µ—Ä–Ω–æ!</b> –ë–∞—É–º–∞–Ω–∫–∞ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç —Å–≤–æ–∏ —Å–µ–∫—Ä–µ—Ç—ã —Ç–æ–ª—å–∫–æ –∏–∑–±—Ä–∞–Ω–Ω—ã–º!";

const TASK_CORRECT_ANSWER_4: StaticStr =
    "‚úÖ <b>–ü—Ä–∞–≤–∏–ª—å–Ω–æ!</b> –¢—ã —á—É–≤—Å—Ç–≤—É–µ—à—å –¥—É—Ö –ë–∞—É–º–∞–Ω–∫–∏ –∫–∞–∫ –Ω–∏–∫—Ç–æ –¥—Ä—É–≥–æ–π!";

const TASK_CORRECT_ANSWER_5: StaticStr =
    "‚úÖ <b>–¢–æ—á–Ω–æ!</b> –¢—ã —á–∏—Ç–∞–µ—à—å –∏—Å—Ç–æ—Ä–∏—é –ë–∞—É–º–∞–Ω–∫–∏ –∫–∞–∫ –æ—Ç–∫—Ä—ã—Ç—É—é –∫–Ω–∏–≥—É!";

const TASK_CORRECT_ANSWERS: [StaticStr; 5] = [
    TASK_CORRECT_ANSWER_1,
    TASK_CORRECT_ANSWER_2,
    TASK_CORRECT_ANSWER_3,
    TASK_CORRECT_ANSWER_4,
    TASK_CORRECT_ANSWER_5,
];

pub fn correct_answer() -> &'static str {
    TASK_CORRECT_ANSWERS.choose(&mut rand::rng()).unwrap()
}

pub const TASK_INVALID_ANSWER_1: StaticStr =
    "‚ùå –ú–∏–º–æ, –Ω–æ –∫–∞–∂–¥—ã–π –ø—Ä–æ–º–∞—Ö ‚Äî —ç—Ç–æ —à–∞–≥ –±–ª–∏–∂–µ –∫ —Ü–µ–ª–∏. –í–ø–µ—Ä—ë–¥, —É —Ç–µ–±—è –ø–æ–ª—É—á–∏—Ç—Å—è!";

pub const TASK_INVALID_ANSWER_2: StaticStr = "‚ùå –ü–æ—á—Ç–∏! –ù–æ –µ—Å–ª–∏ –æ–¥–∏–Ω –ø—É—Ç—å –æ–∫–∞–∑–∞–ª—Å—è —Ç—É–ø–∏–∫–æ–º ‚Äî –∑–Ω–∞—á–∏—Ç, –¥—Ä—É–≥–æ–π —Ç–æ—á–Ω–æ –≤–µ–¥—ë—Ç –∫ —É—Å–ø–µ—Ö—É. –î–∞–≤–∞–π –ø–æ–ø—Ä–æ–±—É–µ–º —Å–Ω–æ–≤–∞?";

// –ü—É—Å—Ç—å –¥—É–±–ª–∏—Ä—É–µ—Ç—Å—è, –±—É–¥–µ–º —Å—á–∏—Ç–∞—Ç—å, —á—Ç–æ –ø–æ–≤—ã—à–µ–Ω–Ω—ã–π —à–∞–Ω—Å –Ω–∞ –≤—ã–ø–∞–¥–µ–Ω–∏–µ
pub const TASK_INVALID_ANSWER_3: StaticStr = "‚ùå –ü–æ—á—Ç–∏! –ù–æ –µ—Å–ª–∏ –æ–¥–∏–Ω –ø—É—Ç—å –æ–∫–∞–∑–∞–ª—Å—è —Ç—É–ø–∏–∫–æ–º ‚Äî –∑–Ω–∞—á–∏—Ç, –¥—Ä—É–≥–æ–π —Ç–æ—á–Ω–æ –≤–µ–¥—ë—Ç –∫ —É—Å–ø–µ—Ö—É. –î–∞–≤–∞–π –ø–æ–ø—Ä–æ–±—É–µ–º —Å–Ω–æ–≤–∞?";

pub const TASK_INVALID_ANSWER_4: StaticStr =
    "‚ùå –ë–ª–∏–∑–∫–æ, –Ω–æ –Ω–µ —Å–æ–≤—Å–µ–º. –ó–∞—Ç–æ —Ç–µ–ø–µ—Ä—å –≥–æ–ª–æ–≤–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ –ø–æ–ª–Ω—É—é ‚Äî –¥–∞–≤–∞–π –µ—â—ë –æ–¥–∏–Ω —à–∞–Ω—Å! ";

pub const TASK_INVALID_ANSWER_5: StaticStr =
    "‚ùå –≠—Ç–æ –Ω–µ –æ–Ω, –Ω–æ —Ç—ã —É–∂–µ –ø–æ—á—Ç–∏ —á—É–≤—Å—Ç–≤—É–µ—à—å –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç, –≤–µ—Ä–Ω–æ? –ù–µ –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–π—Å—è!";

const TASK_INVALID_ANSWERS: [StaticStr; 5] = [
    TASK_INVALID_ANSWER_1,
    TASK_INVALID_ANSWER_2,
    TASK_INVALID_ANSWER_3,
    TASK_INVALID_ANSWER_4,
    TASK_INVALID_ANSWER_5,
];

pub fn invalid_answer() -> &'static str {
    TASK_INVALID_ANSWERS.choose(&mut rand::rng()).unwrap()
}

pub const PROMPT_AVAILABLE_TASK: StaticStr = "üì≤ <b>–í—ã–±–µ—Ä–∏ –∑–∞–¥–∞–Ω–∏–µ –∏–∑ —Å–ø–∏—Å–∫–∞</b>";

pub const PROMPT_COMPLETED_TASK: StaticStr = "üì≤ <b>–í—ã–±–µ—Ä–∏ –∑–∞–¥–∞–Ω–∏–µ –∏–∑ —Å–ø–∏—Å–∫–∞</b>";

pub const ALL_TRACK_TASKS_COMPLETED: StaticStr = "üéâ <b>–¢—Ä–µ–∫ –∑–∞–≤–µ—Ä—à—ë–Ω!</b>\n\
    –ü–æ–∑–¥—Ä–∞–≤–ª—è—é! –¢—ã —É—Å–ø–µ—à–Ω–æ –≤—ã–ø–æ–ª–Ω–∏–ª(–∞) –≤—Å–µ –∑–∞–¥–∞–Ω–∏—è —ç—Ç–æ–≥–æ —Ç—Ä–µ–∫–∞. –¢–µ–ø–µ—Ä—å —Ç—ã –º–æ–∂–µ—à—å –ø–µ—Ä–µ–π—Ç–∏ –∫ –¥—Ä—É–≥–∏–º —Ç—Ä–µ–∫–∞–º –∏ –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Å–≤–æ—ë –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ –ø–æ ¬´–õ–µ–≥–µ–Ω–¥–∞–º –ë–∞—É–º–∞–Ω–∫–∏¬ª!";

pub const NO_COMPLETED_TASKS: StaticStr = "üì≠ <b>–ü—É—Å—Ç–æ</b>\n\
    –ó–¥–µ—Å—å –ø–æ–∫–∞ –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ –∑–∞–≤–µ—Ä—à—ë–Ω–Ω–æ–≥–æ –∑–∞–¥–∞–Ω–∏—è.";

pub const TRACK_NOT_STARTED: StaticStr = "‚òùüèª<b>–°—Ç–æ–π! –≠—Ç–æ —Ç—Ä–µ–∫ –µ—â–µ –Ω–µ –±—ã–ª –∑–∞–ø—É—â–µ–Ω –≤–∞—à–µ–π –∫–æ–º–∞–Ω–¥–æ–π.</b>\n\
    \n\
    ‚≠êÔ∏è –û–Ω –æ—Ç–∫—Ä–æ–µ—Ç—Å—è, –∫–∞–∫ —Ç–æ–ª—å–∫–æ –≤—ã –¥–æ–≥–æ–≤–æ—Ä–∏—Ç–µ—Å—å –∫–æ–º–∞–Ω–¥–æ–π –∏ –∫–∞–ø–∏—Ç–∞–Ω –Ω–∞—á–Ω–µ—Ç –µ–≥–æ!";

pub const PHOTO_TASK_ACCEPTED: StaticStr =
    "–û—Ç–ª–∏—á–Ω–æ! –ü–æ–∫–∞ —á—Ç–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è, –∞ —Ç—ã –º–æ–∂–µ—à—å –¥–≤–∏–≥–∞—Ç—å—Å—è –¥–∞–ª—å—à–µ üì∏";

pub const PLEASE_SEND_PHOTO: StaticStr =
    "‚òùüèª –ü—Ä–∏–Ω–∏–º–∞–µ—Ç—Å—è –∏–º–µ–Ω–Ω–æ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—è, –∞ —Ç—ã, –∫–∞–∂–µ—Ç—Å—è, —Å–∫–∏–Ω—É–ª —á—Ç–æ-—Ç–æ –Ω–µ —Ç–æ!";

pub const PROMPT_ACCEPT_FINAL: StaticStr = "‚≠êÔ∏è <b>–û—Å–Ω–æ–≤–Ω–æ–π —ç—Ç–∞–ø ¬´–õ–µ–≥–µ–Ω–¥ –ë–∞—É–º–∞–Ω–∫–∏¬ª –ø–æ–¥—Ö–æ–¥–∏—Ç –∫ –∫–æ–Ω—Ü—É</b>\n\
    \n\
    üï∞ –ü—Ä–∏—à–ª–æ –≤—Ä–µ–º—è —Å–æ–±—Ä–∞—Ç—å—Å—è –≤–º–µ—Å—Ç–µ, —á—Ç–æ–±—ã –ø–µ—Ä–µ–≤–µ—Ä–Ω—É—Ç—å —ç—Ç—É —Å—Ç—Ä–∞–Ω–∏—Ü—É –∏ –Ω–∞—á–∞—Ç—å –Ω–æ–≤—É—é –≥–ª–∞–≤—É.\n\
    \n\
    üí° <b><i>–ì–æ—Ç–æ–≤ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ —Ñ–∏–Ω–∞–ª—É?</i></b>";

pub const PROMPT_SLOT_TIME: StaticStr = "üïê <b>–í—ã–±–µ—Ä–∏—Ç–µ –≤—Ä–µ–º—è –¥–ª—è —Ñ–∏–Ω–∞–ª–∞</b>\n\
    \n\
    –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —É–¥–æ–±–Ω–æ–µ –≤—Ä–µ–º—è, –∫–æ–≥–¥–∞ –≤–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞ —Å–º–æ–∂–µ—Ç –ø–æ–¥–æ–π—Ç–∏ –Ω–∞ –æ—á–Ω—ã–π —Ñ–∏–Ω–∞–ª.\n\
    \n\
    ‚è± <i>–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–µ –∑–∞–π–º—ë—Ç –Ω–µ –±–æ–ª–µ–µ —á–∞—Å–∞.</i>\n\
    \n\
    <i>–î–æ—Å—Ç—É–ø–Ω—ã–µ —Å–ª–æ—Ç—ã:</i>";

pub const INVALID_TEAM_PLACES: StaticStr = "‚ùå <b>–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç</b>\n\
    \n\
    –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –æ–±—ã—á–Ω–æ–µ —á–∏—Å–ª–æ. –ù–∞–ø—Ä–∏–º–µ—Ä: 5";

pub const PROMPT_CANCEL_RESERVATION_REASON: StaticStr = "‚ùì <b>–£—Ç–æ—á–Ω–∏—Ç–µ –ø—Ä–∏—á–∏–Ω—É –æ—Ç–º–µ–Ω—ã –∑–∞–ø–∏—Å–∏</b>
    \n\
    ‚Ä¢ üóì –•–æ—á—É –∏–∑–º–µ–Ω–∏—Ç—å –≤—Ä–µ–º—è\n\
    ‚Ä¢ üëã –ù–µ —Å–º–æ–≥—É –ø—Ä–∏–π—Ç–∏ –Ω–∞ —Ñ–∏–Ω–∞–ª\n\
    \n\
    üí° <i>–í—ã –º–æ–∂–µ—Ç–µ —Å–≤–æ–±–æ–¥–Ω–æ –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞—Ç—å—Å—è –Ω–∞ –¥—Ä—É–≥–æ–µ –≤—Ä–µ–º—è –¥–æ 21:00 —Å–µ–≥–æ–¥–Ω—è.</i>";

pub const OCHEN_ZHAL: StaticStr = "üëã <b>–û—á–µ–Ω—å –∂–∞–ª—å, —á—Ç–æ –≤—ã –Ω–µ —Å–º–æ–∂–µ—Ç–µ –±—ã—Ç—å —Å –Ω–∞–º–∏ –Ω–∞ —Ñ–∏–Ω–∞–ª–µ</b>\n\
    \n\
    –ú—ã –±—É–¥–µ–º —Å–∫—É—á–∞—Ç—å! –ù–æ –ø–æ–ª–Ω–æ—Å—Ç—å—é –ø–æ–Ω–∏–º–∞–µ–º, —á—Ç–æ –æ–±—Å—Ç–æ—è—Ç–µ–ª—å—Å—Ç–≤–∞ –±—ã–≤–∞—é—Ç —Ä–∞–∑–Ω—ã–º–∏.\n\
    \n\
    üóù <b>–ì–ª–∞–≤–Ω–æ–µ</b> ‚Äî –≤—ã —É–∂–µ —Å—Ç–∞–ª–∏ —á–∞—Å—Ç—å—é ¬´–õ–µ–≥–µ–Ω–¥ –ë–∞—É–º–∞–Ω–∫–∏¬ª –∏ —É—Å–ø–µ—à–Ω–æ –ø—Ä–æ—à–ª–∏ –æ—Å–Ω–æ–≤–Ω–æ–π —ç—Ç–∞–ø! –≠—Ç–æ –æ–≥—Ä–æ–º–Ω–æ–µ –¥–æ—Å—Ç–∏–∂–µ–Ω–∏–µ ‚ú®\n\
    \n\
    <i>–ù–∞–¥–µ–µ–º—Å—è —É–≤–∏–¥–µ—Ç—å –≤–∞—Å –Ω–∞ –¥—Ä—É–≥–∏—Ö –Ω–∞—à–∏—Ö –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è—Ö! –û—Å—Ç–∞–≤–∞–π—Ç–µ—Å—å –Ω–∞ —Å–≤—è–∑–∏!</i>";

pub fn my_team(team: TeamWithMembersDTO) -> String {
    let usernames_text = team
        .members
        .iter()
        .map(|member| {
            member
                .username
                .clone()
                .map(|u| u.to_string())
                .unwrap_or("(–±–µ–∑ –Ω–∏–∫–Ω–µ–π–º–∞)".to_string())
        })
        .fold(String::new(), |acc, username| {
            acc + format!("@{username}\n").as_str()
        });

    format!(
        "üìä <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–∞–Ω–¥–µ:</b>\n\
        ‚Ä¢ –ù–∞–∑–≤–∞–Ω–∏–µ: {}\n\
        ‚Ä¢ –ö–∞–ø–∏—Ç–∞–Ω: @{}\n\
        ‚Ä¢ –£—á–∞—Å—Ç–Ω–∏–∫–∏ ({}/{}):\n\
        {}",
        team.name.as_str(),
        team.captain
            .username
            .map(|u| u.to_string())
            .unwrap_or("(–±–µ–∑ –Ω–∏–∫–Ω–µ–π–º–∞)".to_string()),
        team.size,
        team.max_size,
        usernames_text,
    )
}

pub fn media_uploaded(file_id: &FileID) -> String {
    format!(
        "‚úÖ <b>FileID –ø–æ–ª—É—á–µ–Ω!</b>\n<code>{}</code>",
        file_id.as_str()
    )
}

pub fn character(character: CharacterDTO) -> String {
    let facts = character
        .facts
        .into_iter()
        .map(|f| format!("üîπ {}\n\n", f.as_str()))
        .fold(String::new(), |acc, s| acc + s.as_str());
    format!(
        "<b>{}</b>\n\
        \n\
        <blockquote>¬´{}¬ª</blockquote>\n\
        \n\
        {facts}\
        <b><i>{}</i></b>
        ",
        character.name.as_str(),
        character.quote.as_str(),
        character.legacy.as_str(),
    )
}

pub fn track_description(track: &TrackDescriptionDTO) -> String {
    format!(
        "<b>{}</b>\n\
        \n\
        {}",
        track.tag.as_str().to_uppercase(),
        track.description.as_str()
    )
}

const CELLS: usize = 15;

fn format_duration(duration: Duration) -> String {
    let total_seconds = duration.num_seconds();
    let hours = total_seconds / 3600;
    let minutes = (total_seconds % 3600) / 60;
    let seconds = total_seconds % 60;
    format!("{:02}:{:02}:{:02}", hours, minutes, seconds)
}

pub fn track_menu(track: &TrackInProgressDTO) -> String {
    let timer_str = match track.status {
        TrackStatus::Started(start) => {
            format!(
                "–ü—Ä–æ—à–ª–æ —Å –º–æ–º–µ–Ω—Ç–∞ —Å—Ç–∞—Ä—Ç–∞ —Ç—Ä–µ–∫–∞: {}",
                format_duration(Utc::now() - start)
            )
        }
        TrackStatus::Finished(start, finished) => {
            format!(
                "–í—Ä–µ–º—è –ø—Ä–æ—Ö–æ–∂–¥–µ–Ω–∏—è —Ç—Ä–µ–∫–∞: {} - {} ({})",
                start.format("%d.%m %H:%M"),
                finished.format("%d.%m %H:%M"),
                format_duration(finished - start),
            )
        }
    };

    let width: usize = 15;
    let filled = (track.percent * width as f32) as usize;
    let empty = width.saturating_sub(filled);

    format!(
        "<b>{}</b>\n\
        \n\
        {}\n\
        \n\
        <b>–¢–≤–æ–π –ø—Ä–æ–≥—Ä–µ—Å—Å</b>\n\
        –¢—Ä–µ–∫: <i>{}</i>\n\
        {}\n\
        \n\
        <b>‚ú® ‚îÄ‚îÄ‚îÄ –¢–ê–ô–ú–ï–† ‚îÄ‚îÄ‚îÄ ‚ú®</b>\n\
        üïí {}",
        track.tag.as_str().to_uppercase(),
        track.description.as_str(),
        track.tag.as_str(),
        format!(
            "{}{} {}%",
            "‚ñ∞".repeat(filled),
            "‚ñ±".repeat(empty),
            (track.percent * 100.0) as usize
        ),
        timer_str,
    )
}

pub fn task_question_and_explanation(task: &TaskDTO) -> String {
    let answers = task
        .correct_answers
        .iter()
        .map(|a| a.to_string())
        .collect::<Vec<String>>()
        .join(", ");
    format!(
        "{}\n\
        \n\
        <b>–ü—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç: </b>{}\n\
        \n\
        {}",
        task.question.as_str(),
        answers,
        task.explanation.as_str()
    )
}

pub fn media_not_found(media_id: &MediaID) -> String {
    format!(
        "<b>‚ùå –ú–µ–¥–∏–∞—Ñ–∞–π–ª <code>{}</code> –Ω–µ –Ω–∞–π–¥–µ–Ω</b>",
        media_id.as_str()
    )
}

pub fn prompt_slot_places(team_size: usize) -> String {
    format!(
        "üë• <b>–£–∫–∞–∂–∏—Ç–µ —á–∏—Å–ª–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –Ω–∞ —Ñ–∏–Ω–∞–ª–µ</b>\n\
        –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ, —Å–∫–æ–ª—å–∫–æ —á–µ–ª–æ–≤–µ–∫ –∏–∑ –≤–∞—à–µ–π –∫–æ–º–∞–Ω–¥—ã –ø–ª–∞–Ω–∏—Ä—É–µ—Ç –ø—Ä–∏–π—Ç–∏ –Ω–∞ –æ—á–Ω—ã–π —Ñ–∏–Ω–∞–ª.\n\
        \n\
        üí° <i>–í –∫–æ–º–∞–Ω–¥–µ —Å–µ–π—á–∞—Å {team_size} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤.</i>"
    )
}

pub fn places_greater_than_team(team_size: usize) -> String {
    format!(
        "‚ùå <b>–°–ª–∏—à–∫–æ–º –±–æ–ª—å—à–æ–µ —á–∏—Å–ª–æ</b>\n\
        \n\
        –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –Ω–∞ —Ñ–∏–Ω–∞–ª–µ –Ω–µ –º–æ–∂–µ—Ç –ø—Ä–µ–≤—ã—à–∞—Ç—å —Ä–∞–∑–º–µ—Ä –≤–∞—à–µ–π –∫–æ–º–∞–Ω–¥—ã ({team_size} —á–µ–ª–æ–≤–µ–∫). –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ."
    )
}

pub fn no_slots(team_size: usize) -> String {
    format!(
        "‚è∞ <b>–í —ç—Ç–æ –≤—Ä–µ–º—è –Ω–µ—Ç –º–µ—Å—Ç</b>\n\
        –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω–æ–µ –≤—Ä–µ–º—è –Ω–µ –æ—Å—Ç–∞–ª–æ—Å—å —Å–ª–æ—Ç–æ–≤ –¥–ª—è {team_size} —á–µ–ª–æ–≤–µ–∫.\n\
        \n\
        <i>–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ –¥—Ä—É–≥–æ–µ –≤—Ä–µ–º—è –¥–ª—è —É—á–∞—Å—Ç–∏—è –≤ —Ñ–∏–Ω–∞–ª–µ.</i>"
    )
}

pub fn slot_successfully_reserved(slot: SlotDTO) -> String {
    format!(
        "–û—Ç–ª–∏—á–Ω–æ! –ó–∞–ø–∏—Å—å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞.\n\
        \n\
        ‚è∞ –§–∏–Ω–∞–ª –ø—Ä–æ–π–¥–µ—Ç 08 –æ–∫—Ç—è–±—Ä—è –≤ {} –≤ –∞—É–¥–∏—Ç–æ—Ä–∏–∏ {} –ö–æ–Ω–≥—Ä–µ—Å—Å-—Ü–µ–Ω—Ç—Ä–∞ (–≤—Ö–æ–¥ B4 —Å–æ —Å—Ç–æ—Ä–æ–Ω—ã –ì–ó)\n\
        \n\
        ü™ß <b><i>–ñ–¥—ë–º –≤–∞—à—É –∫–æ–º–∞–Ω–¥—É, —á—Ç–æ–±—ã –≤–º–µ—Å—Ç–µ –ø–æ—Å—Ç–∞–≤–∏—Ç—å –∫—Ä–∞—Å–∏–≤—É—é —Ç–æ—á–∫—É. –î–æ –≤—Å—Ç—Ä–µ—á–∏!</i></b>",
        slot.start.format("%H:%M"),
        slot.site.as_str(),
    )
}
