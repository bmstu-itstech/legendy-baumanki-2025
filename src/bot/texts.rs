use crate::app::usecases::dto::{CharacterDTO, Profile, TeamDTO, TeamWithMembersDTO, UserTaskDTO};
use crate::domain::models::{FileID, TeamName};

type StaticStr = &'static str;

pub const ENTER_MESSAGE_TEXT: StaticStr = "üìù –ù–∞–ø–∏—à–∏ –º–Ω–µ —Ç–µ–∫—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ";

pub const USE_KEYBOARD: StaticStr =
    "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã –≤–Ω–∏–∑—É –¥–ª—è –æ—Ç–≤–µ—Ç–∞. –¢–∞–∫ –±—É–¥–µ—Ç —É–¥–æ–±–Ω–µ–µ!";

pub const PERMISSION_DENIED: StaticStr = "<b>‚ùå –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω</b>\n\
    –£ –≤–∞—Å –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.";

pub const INVALID_INVITE_CODE: StaticStr = "‚ùå <b>–û–π-–æ–π!</b>\n\
     –≠—Ç–æ—Ç –∫–æ–¥-–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—è –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç. –ü—Ä–æ–≤–µ—Ä—å, —á—Ç–æ –≤–≤–µ–ª –≤—Å–µ 6 —Å–∏–º–≤–æ–ª–æ–≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ, –∏ \
     –ø–æ–ø—Ä–æ–±—É–π –µ—â–µ —Ä–∞–∑.";

pub const TEAM_NOT_EXISTS: StaticStr = "‚ùå <b>–û–π-–æ–π!</b>\n\
     –ö–∞–∂–µ—Ç—Å—è, —ç—Ç–∞ —Å—Å—ã–ª–∫–∞ –±–æ–ª—å—à–µ –Ω–µ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–∞. –ó–∞–ø—Ä–æ—Å–∏ —É –∫–∞–ø–∏—Ç–∞–Ω–∞ –Ω–æ–≤—É—é –∏ –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑.";

pub const ALREADY_IN_THIS_TEAM: StaticStr = "ü§ù <b>–¢—ã —É–∂–µ —Å –Ω–∞–º–∏!</b>\n\
     –¢–≤–æ–µ –º–µ—Å—Ç–æ –≤ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ —É–∂–µ –∑–∞—Ä–µ–∑–µ—Ä–≤–∏—Ä–æ–≤–∞–Ω–æ";

pub const ALREADY_IN_OTHER_TEAM: StaticStr = "üîÑ <b>–°–Ω–∞—á–∞–ª–∞ –Ω—É–∂–Ω–æ –≤—ã–π—Ç–∏</b>\n\
     –¢—ã —Å–æ—Å—Ç–æ–∏—à—å –≤ –¥—Ä—É–≥–æ–π –∫–æ–º–∞–Ω–¥–µ. –ß—Ç–æ–±—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –Ω–æ–≤–æ–π, —Å–Ω–∞—á–∞–ª–∞ –≤—ã–π–¥–∏ –∏–∑ —Ç–µ–∫—É—â–µ–π \
     (–≤—Å–µ —Ç–≤–æ–∏ –±–∞–ª–ª—ã —Å–æ—Ö—Ä–∞–Ω—è—Ç—Å—è). –ü–æ—Å–ª–µ —ç—Ç–æ–≥–æ –ø–µ—Ä–µ–π–¥–∏ –ø–æ —Å—Å—ã–ª–∫–µ-–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏—é –∑–∞–Ω–æ–≤–æ.";

pub const GREETING_MSG: StaticStr = "üèõ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ ¬´–õ–µ–≥–µ–Ω–¥—ã –ë–∞—É–º–∞–Ω–∫–∏¬ª ‚Äî –≥–ª–∞–≤–Ω–æ–µ –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏–µ —ç—Ç–æ–≥–æ —Å–µ–º–µ—Å—Ç—Ä–∞ –¥–ª—è \
     –ø–µ—Ä–≤–æ–∫—É—Ä—Å–Ω–∏–∫–æ–≤! –ù–∞—Å—Ç–∞–ª–æ –≤—Ä–µ–º—è –æ—Ç–ø—Ä–∞–≤–∏—Ç—å—Å—è –≤ —É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –ø—É—Ç–µ—à–µ—Å—Ç–≤–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ —Å—Ç–∞–ª–æ –Ω–∞—Å—Ç–æ—è—â–µ–π \
     —Ç—Ä–∞–¥–∏—Ü–∏–µ–π –¥–ª—è –Ω–æ–≤—ã—Ö —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –Ω–∞—à–µ–≥–æ –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞. –ï—Å–ª–∏, –∫–æ–Ω–µ—á–Ω–æ, —Ç—ã –≥–æ—Ç–æ–≤ –ø—Ä–∏–Ω—è—Ç—å –≤—ã–∑–æ–≤...</b>\n\
     \n\
     <b>¬´–õ–µ–≥–µ–Ω–¥—ã –ë–∞—É–º–∞–Ω–∫–∏¬ª</b> ‚Äî —ç—Ç–æ –ø–æ–≥—Ä—É–∂–µ–Ω–∏–µ –≤ –º–∏—Ä –±–∞—É–º–∞–Ω—Å–∫–∏—Ö —Ç—Ä–∞–¥–∏—Ü–∏–π, –∏—Å—Ç–æ—Ä–∏—è –∫–æ—Ç–æ—Ä—ã—Ö \
     –æ–∂–∏–≤–∞–µ—Ç –≤ –∫–∞–∂–¥–æ–π –∑–∞–≥–∞–¥–∫–µ. –ó–¥–µ—Å—å —Ç—ã —Å–º–æ–∂–µ—à—å –ø—Ä–æ—è–≤–∏—Ç—å –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç –∏ –Ω–∞—Ö–æ–¥—á–∏–≤–æ—Å—Ç—å, –æ–±—ä–µ–¥–∏–Ω–∏—Ç—å—Å—è \
     —Å –∫–æ–º–∞–Ω–¥–æ–π –µ–¥–∏–Ω–æ–º—ã—à–ª–µ–Ω–Ω–∏–∫–æ–≤ –∏, –≤–æ–∑–º–æ–∂–Ω–æ, –≤–ø–∏—Å–∞—Ç—å —Å–≤–æ—ë –∏–º—è –≤ –Ω–æ–≤—É—é –≥–ª–∞–≤—É –ª–µ–≥–µ–Ω–¥ –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞.\n\
     \n\
     üì± –í—Å–µ —ç—Ç–æ —Å—Ç–∞–Ω–µ—Ç –≤–æ–∑–º–æ–∂–Ω—ã–º –±–ª–∞–≥–æ–¥–∞—Ä—è —Ç–≤–æ–µ–º—É –∂–µ–ª–∞–Ω–∏—é –∏ —ç—Ç–æ–º—É –±–æ—Ç—É ‚Äî –∑–¥–µ—Å—å —Ç—ã –±—É–¥–µ—à—å –ø–æ–ª—É—á–∞—Ç—å \
     –∑–∞–¥–∞–Ω–∏—è, –ø–æ–¥—Å–∫–∞–∑–∫–∏, —É–∑–Ω–∞–≤–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Ñ–∞–∫—Ç—ã –∏ –º–Ω–æ–≥–æ–µ-–º–Ω–æ–≥–æ–µ –¥—Ä—É–≥–æ–µ, —á—Ç–æ –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ \
     —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –≤ —ç—Ç–æ–π –∑–∞–ø—É—Ç–∞–Ω–Ω–æ–π –∏—Å—Ç–æ—Ä–∏–∏.\n\
     \n\
     üåü –ù–∞–ø–æ–º–∏–Ω–∞–µ–º, —á—Ç–æ —Ç—ã –º–æ–∂–µ—à—å –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞—Ç—å—Å—è –æ–¥–∏–Ω –∏–ª–∏ –∂–µ —Å–æ–±—Ä–∞—Ç—å –∫–æ–º–∞–Ω–¥—É ‚Äî –≤—ã–±–æ—Ä –∑–∞ —Ç–æ–±–æ–π. \
     –ü—Ä–∞–≤–∏–ª–∞, –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –∏ –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –æ —Ç–æ–º, –∫–∞–∫ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –Ω–∞—à–µ–º—É –∑–∞–≥–∞–¥–æ—á–Ω–æ–º—É \
     –ø—Ä–∏–∫–ª—é—á–µ–Ω–∏—é, —É–∂–µ –∂–¥—É—Ç —Ç–µ–±—è –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∞—Ö –≤—ã—à–µ.\n\
     \n\
     <i>–†–∞–∑–≥–∞–¥—ã–≤–∞–π –∑–∞–≥–∞–¥–∫–∏, –∑–∞—Ä–∞–±–∞—Ç—ã–≤–∞–π –±–∞–ª–ª—ã –∏ —É–∑–Ω–∞–≤–∞–π –≤—Å–µ –±–æ–ª—å—à–µ —Å–µ–∫—Ä–µ—Ç–æ–≤, —Ç–∞—è—â–∏—Ö—Å—è –≤ —Å—Ç–µ–Ω–∞—Ö \
     –£–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞. –î–æ –≤—Å—Ç—Ä–µ—á–∏!ü§ç</i>";

pub const PROMPT_PD_AGREEMENT: StaticStr = "üìÑ <b>–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö</b>\n\
    –î–ª—è —É—á–∞—Å—Ç–∏—è –≤ –∫–≤–µ—Å—Ç–µ –Ω–∞–º —Ç—Ä–µ–±—É–µ—Ç—Å—è —Ç–≤–æ–µ —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö –≤ \
    —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–∏ —Å –§–µ–¥–µ—Ä–∞–ª—å–Ω—ã–º –∑–∞–∫–æ–Ω–æ–º ‚Ññ152-–§–ó.";

pub const PD_AGREEMENT_IS_REQUIRED: StaticStr = "‚ö†Ô∏è <b>–¢—Ä–µ–±—É–µ—Ç—Å—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ</b>\n\
     –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–¥—Ç–≤–µ—Ä–¥–∏ —Å–≤–æ–µ —Å–æ–≥–ª–∞—Å–∏–µ –Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö, —á—Ç–æ–±—ã –º—ã –º–æ–≥–ª–∏ \
     –ø—Ä–æ–¥–æ–ª–∂–∏—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é.";

pub const PROMPT_FULL_NAME: StaticStr = "‚úèÔ∏è <b>–ü—Ä–µ–¥—Å—Ç–∞–≤—å—Å—è, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞!</b>\n\
     –í–≤–µ–¥–∏ —Å–≤–æ–∏ –§–∞–º–∏–ª–∏—é, –ò–º—è –∏ –û—Ç—á–µ—Å—Ç–≤–æ –ø–æ–ª–Ω–æ—Å—Ç—å—é.\n\
     <i>–ù–∞–ø—Ä–∏–º–µ—Ä: –ò–≤–∞–Ω–æ–≤ –ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤–∏—á</i>";

pub const INVALID_FULL_NAME: StaticStr = "‚ùå <b>–ß—Ç–æ-—Ç–æ –Ω–µ —Ç–∞–∫ —Å –§–ò–û</b>\n\
     –ö–∞–∂–µ—Ç—Å—è, –º—ã –Ω–µ —Å–º–æ–≥–ª–∏ —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ç–≤–æ–µ –§–ò–û. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–æ–≤–µ—Ä—å –Ω–∞–ø–∏—Å–∞–Ω–∏–µ –∏ –ø–æ–ø—Ä–æ–±—É–π –≤–≤–µ—Å—Ç–∏ \
     –µ—â–µ —Ä–∞–∑.";

pub const ENTER_GROUP_NAME: StaticStr = "‚úèÔ∏è <b>–¢–≤–æ—è —É—á–µ–±–Ω–∞—è –≥—Ä—É–ø–ø–∞</b>\n\
     –¢–µ–ø–µ—Ä—å –≤–≤–µ–¥–∏ –Ω–æ–º–µ—Ä —Å–≤–æ–µ–π —É—á–µ–±–Ω–æ–π –≥—Ä—É–ø–ø—ã. –ë—É–¥—å –≤–Ω–∏–º–∞—Ç–µ–ª–µ–Ω –∫ —Ñ–æ—Ä–º–∞—Ç—É!\n\
     <b>*–ü—Ä–∏–º–µ—Ä: –ò–£13-11–ë*</b>\n\
     üí° <i>–í–∞–∂–Ω–æ: —É—á–∞—Å—Ç–∏–µ –≤ –∫–≤–µ—Å—Ç–µ –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –ø–µ—Ä–≤–æ–≥–æ –∫—É—Ä—Å–∞</i>";

pub const INVALID_GROUP_NAME: StaticStr = "‚ùå <b>–ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –≥—Ä—É–ø–ø—ã</b>\n\
     –ú–Ω–µ –∫–∞–∂–µ—Ç—Å—è, —Ç–∞–∫–æ–π –≥—Ä—É–ø–ø—ã –º—ã –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ –Ω–æ–º–µ—Ä —Å—Ç—Ä–æ–≥–æ –≤ —Ç–æ–º —Ñ–æ—Ä–º–∞—Ç–µ, \
     –∫–æ—Ç–æ—Ä—ã–π —É–∫–∞–∑–∞–Ω –≤ –ø—Ä–∏–º–µ—Ä–µ –≤—ã—à–µ.";

pub const NOT_FIRST_COURSE: StaticStr = "üò¢ <b>–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —Ç—ã –Ω–µ –ø—Ä–æ—Ö–æ–¥–∏—à—å</b>\n\
    –£—á–∞—Å—Ç–∏–µ –≤ ¬´–õ–µ–≥–µ–Ω–¥–∞—Ö –ë–∞—É–º–∞–Ω–∫–∏¬ª –¥–æ—Å—Ç—É–ø–Ω–æ —Ç–æ–ª—å–∫–æ –¥–ª—è —Å—Ç—É–¥–µ–Ω—Ç–æ–≤ –ø–µ—Ä–≤–æ–≥–æ –∫—É—Ä—Å–∞. –ñ–¥–µ–º —Ç–µ–±—è –Ω–∞ –¥—Ä—É–≥–∏—Ö \
    –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è—Ö –°—Ç—É–¥–µ–Ω—á–µ—Å–∫–æ–≥–æ —Å–æ–≤–µ—Ç–∞!";

pub const SUCCESSFUL_REGISTRATION: StaticStr = "üéâ <b>–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞!</b>\n\
     –¢—ã —É—Å–ø–µ—à–Ω–æ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–ª—Å—è(–∞—Å—å) –Ω–∞ –∫–≤–µ—Å—Ç ¬´–õ–µ–≥–µ–Ω–¥—ã –ë–∞—É–º–∞–Ω–∫–∏¬ª!";

pub const MENU_TEXT: StaticStr = "üì≤ <b>–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é</b>\n\
    –í—ã–±–µ—Ä–∏ –Ω—É–∂–Ω—ã–π –ø—É–Ω–∫—Ç –∏–∑ –º–µ–Ω—é –Ω–∏–∂–µ.";

pub const UNKNOWN_MENU_OPTION: StaticStr = "‚ùå <b>–ù–µ–ø–æ–Ω—è—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞</b>\n\
     –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, —è –Ω–µ –ø–æ–Ω–∏–º–∞—é —ç—Ç–æ—Ç –∑–∞–ø—Ä–æ—Å. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏ –æ–¥–Ω—É –∏–∑ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –æ–ø—Ü–∏–π –≤ –º–µ–Ω—é.";

pub const PROMPT_TEAM_CODE: StaticStr = "üîë <b>–í–≤–µ–¥–∏ –∫–æ–¥-–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ</b>\n\
     –ß—Ç–æ–±—ã –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∫–æ–º–∞–Ω–¥–µ, –≤–≤–µ–¥–∏ 6-–∑–Ω–∞—á–Ω—ã–π –∫–æ–¥, –∫–æ—Ç–æ—Ä—ã–π —Ç–µ–±–µ –¥–∞–ª –∫–∞–ø–∏—Ç–∞–Ω.";

pub const TEAM_IS_FULL: StaticStr = "üö™ <b>–í –∫–æ–º–∞–Ω–¥–µ –Ω–µ—Ç –º–µ—Å—Ç</b>\n\
     –í —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥–µ —É–∂–µ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ (8 —á–µ–ª–æ–≤–µ–∫). –°–æ–∑–¥–∞–π –Ω–æ–≤—É—é –∏–ª–∏ –Ω–∞–π–¥–∏ \
     –¥—Ä—É–≥—É—é –∫–æ–º–∞–Ω–¥—É.";

pub const TEAM_NOT_FOUND: StaticStr = "üîç <b>–ö–æ–º–∞–Ω–¥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞</b>\n\
     –ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –∫–æ–º–∞–Ω–¥—ã —Å —Ç–∞–∫–∏–º –∫–æ–¥–æ–º –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç. –ü—Ä–æ–≤–µ—Ä—å, –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ª–∏ —Ç—ã –≤–≤—ë–ª(–∞) 6-–∑–Ω–∞—á–Ω—ã–π \
     –∫–æ–¥, –∏ –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑.\n\
     üí° <i>–ö–æ–¥ –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å —É –∫–∞–ø–∏—Ç–∞–Ω–∞ –∫–æ–º–∞–Ω–¥—ã</i>";

pub const PROMPT_TEAM_NAME: StaticStr = "üè∑ <b>–ü—Ä–∏–¥—É–º–∞–π –Ω–∞–∑–≤–∞–Ω–∏–µ –¥–ª—è —Å–≤–æ–µ–π –∫–æ–º–∞–Ω–¥—ã</b>\n\
     –î–∞–π –µ–π –∫—Ä—É—Ç–æ–µ –∏ –∑–∞–ø–æ–º–∏–Ω–∞—é—â–µ–µ—Å—è –Ω–∞–∑–≤–∞–Ω–∏–µ!";

pub const INVALID_TEAM_NAME: StaticStr = "‚ùå <b>–ù–∞–∑–≤–∞–Ω–∏–µ –Ω–µ –ø–æ–¥—Ö–æ–¥–∏—Ç</b>\n\
     –¢–∞–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –Ω–µ–ª—å–∑—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å. –ü–æ–ø—Ä–æ–±—É–π –ø—Ä–∏–¥—É–º–∞—Ç—å –¥—Ä—É–≥–æ–µ.";

pub const INTERNAL_ERROR: StaticStr = "‚ö†Ô∏è <b>–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞</b>\n\
     –ü—Ä–æ–∏–∑–æ—à–ª–∞ –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–∞—è –æ—à–∏–±–∫–∞. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ –ø–æ–∑–∂–µ –∏–ª–∏ —Å–æ–æ–±—â–∏ \
     –æ–± —ç—Ç–æ–º –æ—Ä–≥–∞–Ω–∏–∑–∞—Ç–æ—Ä–∞–º (—Å–º. –æ–ø–∏—Å–∞–Ω–∏–µ –±–æ—Ç–∞).";

pub const SEND_APPROVAL_EXIT_TEAM: StaticStr =
    "‚ùì –¢—ã –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —Ö–æ—á–µ—à—å –≤—ã–π—Ç–∏ –∏–∑ —Å–≤–æ–µ–π —Ç–µ–∫—É—â–µ–π –∫–æ–º–∞–Ω–¥—ã?";

pub const SUCCESSFUL_EXIT_TEAM: StaticStr = "üëã <b>–¢—ã –≤—ã—à–µ–ª –∏–∑ –∫–æ–º–∞–Ω–¥—ã</b>\n\
     –¢—ã —É—Å–ø–µ—à–Ω–æ –ø–æ–∫–∏–Ω—É–ª(–∞) –∫–æ–º–∞–Ω–¥—É. –¢–µ–ø–µ—Ä—å —Ç—ã –º–æ–∂–µ—à—å –≤—Å—Ç—É–ø–∏—Ç—å –≤ –Ω–æ–≤—É—é, –∏—Å–ø–æ–ª—å–∑—É—è –∫–æ–¥-–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ.";

pub const INVALID_UPLOAD_COMMAND_USAGE: StaticStr = "<b>‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã</b>\n\
    –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:\n\
    <code>/upload key</code>";

pub const PROMPT_MEDIA: StaticStr = "üì§ <b>–ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞</b>\n\
    –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª (–∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–ª–∏ –≤–∏–¥–µ–æ—Å–æ–æ–±—â–µ–Ω–∏–µ) –≤ —á–∞—Ç, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –µ–≥–æ FileID.";

pub const UNKNOWN_MEDIA_FORMAT: StaticStr = "‚ùå <b>–§–æ—Ä–º–∞—Ç –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è</b>
    –û—Ç–ø—Ä–∞–≤—å—Ç–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –∏–ª–∏ –≤–∏–¥–µ–æ—Å–æ–æ–±—â–µ–Ω–∏–µ.";

pub const TASK_INCORRECT_ANSWER: StaticStr = "‚ùï <b>–£–ø—Å‚Ä¶</b>\n\
    –û—Ç–≤–µ—Ç –Ω–µ–≤–µ—Ä–Ω—ã–π, –ø–æ–ø—Ä–æ–±—É–π –µ—â—ë —Ä–∞–∑!\n\
    \n\
    ‚ùî <i>–•–æ—Ä–æ—à–µ–Ω—å–∫–æ –ø–æ–¥—É–º–∞–π, –∏–Ω–æ–≥–¥–∞ –∏—Å—Ç–∏–Ω–∞ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≥–¥–µ-—Ç–æ —Å–æ–≤—Å–µ–º —Ä—è–¥–æ–º!</i>";

pub const REBUS_ALREADY_SOLVED: StaticStr = "‚úÖ <b>–û—Ç–≤–µ—Ç —É–∂–µ –∑–∞—Å—á–∏—Ç–∞–Ω</b>\n\
    \n\
    –¢—ã —É–∂–µ –¥–∞–ª(–∞) –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ —ç—Ç–æ—Ç —Ä–µ–±—É—Å! –ú–æ–ª–æ–¥–µ—Ü!\n\
    \n\
    <i>–ú–æ–∂–µ—à—å –ø–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –∑–∞–¥–∞–Ω–∏—é.</i>";

pub const RIDDLE_ALREADY_SOLVED: StaticStr = "‚úÖ <b>–û—Ç–≤–µ—Ç —É–∂–µ –∑–∞—Å—á–∏—Ç–∞–Ω</b>\n\
    \n\
    –¢—ã —É–∂–µ –¥–∞–ª(–∞) –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –æ—Ç–≤–µ—Ç –Ω–∞ —ç—Ç—É –∑–∞–≥–∞–¥–∫—É! –ú–æ–ª–æ–¥–µ—Ü!\n\
    \n\
    <i>–ú–æ–∂–µ—à—å –ø–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É –∑–∞–¥–∞–Ω–∏—é.</i>";

pub fn successful_joined_team(team_name: TeamName) -> String {
    format!(
        "üéâ <b>–¢—ã –≤ –∫–æ–º–∞–Ω–¥–µ!</b>\n\
         –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –¢–µ–ø–µ—Ä—å —Ç—ã —É—á–∞—Å—Ç–Ω–∏–∫ –∫–æ–º–∞–Ω–¥—ã ¬´{}¬ª. –£–¥–∞—á–∏ –Ω–∞ –∫–≤–µ—Å—Ç–µ!",
        team_name.as_str()
    )
}

pub const PROMPT_CHARACTER_NAME: StaticStr = "‚ò∫Ô∏è <b>–û—Ç–ª–∏—á–Ω—ã–π –≤—ã–±–æ—Ä!</b>\n\
    \n\
    –ü–æ–∑–Ω–∞–∫–æ–º—å—Å—è —Å –≤–µ–ª–∏–∫–∏–º–∏ —É—á—ë–Ω—ã–º–∏, –∏–Ω–∂–µ–Ω–µ—Ä–∞–º–∏ –∏ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞–º–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω–∞—á–∏–Ω–∞–ª–∏ —Å–≤–æ–π –ø—É—Ç—å –∑–¥–µ—Å—å, –≤ —Å—Ç–µ–Ω–∞—Ö –ú–ì–¢–£ –∏–º. –ù.–≠. –ë–∞—É–º–∞–Ω–∞.\n\
    \n\
    <b><i>–ö–æ–≥–æ –∏–∑ –Ω–∏—Ö —Ç—ã —Ö–æ—á–µ—à—å —É–∑–Ω–∞—Ç—å –ª—É—á—à–µ?</i></b>";

pub fn profile(profile: Profile) -> String {
    match profile.team_name {
        Some(team_name) => {
            format!(
                "üìã <b>–¢–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å:</b>\n\
                 ‚Ä¢ –§–ò–û: {}\n\
                 ‚Ä¢ –ì—Ä—É–ø–ø–∞: {}\n\
                 ‚Ä¢ –ö–æ–º–∞–Ω–¥–∞: {}",
                profile.full_name.as_str(),
                profile.group_name.as_str(),
                team_name.as_str()
            )
        }
        None => {
            format!(
                "üìã <b>–¢–≤–æ–π –ø—Ä–æ—Ñ–∏–ª—å:</b>\n\
                 ‚Ä¢ –§–ò–û: {}\n\
                 ‚Ä¢ –ì—Ä—É–ø–ø–∞: {}\n\
                 ‚Ä¢ –ö–æ–º–∞–Ω–¥–∞: —Ç—ã –Ω–µ —Å–æ—Å—Ç–æ–∏—à—å –≤ –∫–æ–º–∞–Ω–¥–µ.",
                profile.full_name.as_str(),
                profile.group_name.as_str(),
            )
        }
    }
}

pub fn my_team(team: TeamWithMembersDTO, invite_link: &str) -> String {
    let completed_str = if team.completed {
        "‚úÖ –ö–æ–º–∞–Ω–¥–∞ –º–æ–∂–µ—Ç —É—á–∞—Å—Ç–≤–æ–≤–∞—Ç—å –≤ —Ñ–∏–Ω–∞–ª–µ!"
    } else {
        "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –¥–ª—è —É—á–∞—Å—Ç–∏—è –≤ —Ñ–∏–Ω–∞–ª–µ. –î–ª—è —É—á–∞—Å—Ç–∏—è –≤ —Ñ–∏–Ω–∞–ª–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ, —á—Ç–æ–±—ã –∫–æ–º–∞–Ω–¥–∞ —Å–æ—Å—Ç–æ—è–ª–∞ –º–∏–Ω–∏–º—É–º –∏–∑ 5 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤!"
    };

    let usernames_text = team
        .members
        .iter()
        .map(|member| {
            member
                .username
                .clone()
                .map(|u| u.to_string())
                .unwrap_or("(–±–µ–∑ –Ω–∏–∫–Ω–µ–π–º–∞)".to_string())
        })
        .fold(String::new(), |acc, username| {
            acc + format!("@{username}\n").as_str()
        });

    format!(
        "üìä <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–æ–º–∞–Ω–¥–µ:</b>\n\
        ‚Ä¢ –ù–∞–∑–≤–∞–Ω–∏–µ: {}\n\
        ‚Ä¢ –ö–æ–¥: <code>{}</code>\n\
        ‚Ä¢ –°—Å—ã–ª–∫–∞-–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ: {}\n\
        ‚Ä¢ –£—á–∞—Å—Ç–Ω–∏–∫–∏ ({}/{}):\n\
        {}\n\
        ‚Ä¢ <i>{}</i>\n\
        ",
        team.name.as_str(),
        team.id.as_str(),
        invite_link,
        team.size,
        team.max_size,
        usernames_text,
        completed_str,
    )
}

pub fn team_created(team: TeamDTO, invite_link: &str) -> String {
    format!(
        "üéä <b>–ö–æ–º–∞–Ω–¥–∞ —Å–æ–∑–¥–∞–Ω–∞!</b>\n\
         –ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –¢–≤–æ—è –∫–æ–º–∞–Ω–¥–∞ ¬´{}¬ª –≥–æ—Ç–æ–≤–∞ –∫ –∫–≤–µ—Å—Ç—É.\n\
         ‚Ä¢ –ö–æ–¥ –¥–ª—è –¥—Ä—É–∑–µ–π: <code>{}</code>\n\
         ‚Ä¢ –°—Å—ã–ª–∫–∞-–ø—Ä–∏–≥–ª–∞—à–µ–Ω–∏–µ: {}\n\
         üí° <i>–í–∞–∂–Ω–æ: –¥–ª—è –≤—ã—Ö–æ–¥–∞ –≤ —Ñ–∏–Ω–∞–ª –≤ –∫–æ–º–∞–Ω–¥–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –Ω–µ –º–µ–Ω—å—à–µ 5 —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤. –ó–æ–≤–∏ –¥—Ä—É–∑–µ–π!</i>",
        team.name.as_str(),
        team.id.as_str(),
        invite_link,
    )
}

pub fn media_uploaded(file_id: &FileID) -> String {
    format!(
        "‚úÖ <b>FileID –ø–æ–ª—É—á–µ–Ω!</b>\n<code>{}</code>",
        file_id.as_str()
    )
}

pub fn rebuses_menu_text(tasks: &[UserTaskDTO]) -> String {
    let completed = tasks
        .iter()
        .fold(0, |acc, task| acc + if task.solved { 1 } else { 0 });
    let total = tasks.len();
    let list = tasks
        .into_iter()
        .map(|t| {
            format!(
                "‚Ä¢ –†–µ–±—É—Å #{} {}\n",
                t.index,
                if t.solved { "‚úÖ" } else { "‚è≥" }
            )
        })
        .fold(String::new(), |acc, s| acc + s.as_str());
    format!(
        "üîç <b>–ú–µ–Ω—é —Ä–µ–±—É—Å–æ–≤</b>\n\
        <i>–†–µ—à–µ–Ω–æ: {completed}/{total}</i>\n\
        \n\
        –í–æ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —Ä–µ–±—É—Å–æ–≤. –í—ã–±–µ—Ä–∏ –Ω–æ–º–µ—Ä, —á—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –∫ —Ä–µ–±—É—Å—É.\n\
        \n\
        –°—Ç–∞—Ç—É—Å:\n\
        ‚úÖ ‚Äî —Ä–µ—à—ë–Ω\n\
        ‚è≥ ‚Äî –Ω–µ —Ä–µ—à—ë–Ω\n\
        \n\
        {list}"
    )
}

pub fn riddle_menu_text(tasks: &[UserTaskDTO]) -> String {
    let completed = tasks
        .iter()
        .fold(0, |acc, task| acc + if task.solved { 1 } else { 0 });
    let total = tasks.len();
    let list = tasks
        .into_iter()
        .map(|t| {
            format!(
                "‚Ä¢ –ó–∞–≥–∞–¥–∫–∞ #{} {}\n",
                t.index,
                if t.solved { "‚úÖ" } else { "‚è≥" }
            )
        })
        .fold(String::new(), |acc, s| acc + s.as_str());
    format!(
        "üîç <b>–ú–µ–Ω—é –∑–∞–≥–∞–¥–æ–∫</b>\n\
        <i>–†–µ—à–µ–Ω–æ: {completed}/{total}</i>\n\
        \n\
        –í–æ—Ç —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∑–∞–≥–∞–¥–æ–∫. –í—ã–±–µ—Ä–∏ –Ω–æ–º–µ—Ä, —á—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –∫ –∑–∞–≥–∞–¥–∫–µ.\n\
        \n\
        –°—Ç–∞—Ç—É—Å:\n\
        ‚úÖ ‚Äî —Ä–µ—à–µ–Ω–∞\n\
        ‚è≥ ‚Äî –Ω–µ —Ä–µ—à–µ–Ω–∞\n\
        \n\
        {list}"
    )
}

pub fn character(character: CharacterDTO) -> String {
    let facts = character.facts
        .into_iter()
        .map(|f| {
            format!("üîπ {}\n\n", f.as_str())
        })
        .fold(String::new(), |acc, s| acc + s.as_str());
    format!(
        "<b>{}</b>\n\
        \n\
        <blockquote>¬´{}¬ª</blockquote>\n\
        \n\
        {facts}\
        <b><i>{}</i></b>
        ",
        character.name.as_str(),
        character.quote.as_str(),
        character.legacy.as_str(),
    )
}
